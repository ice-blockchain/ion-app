name: CI
on:
  pull_request:
    branches:
      - master

jobs:
  flutter:
    name: Flutter -- verify, test
    runs-on: macOS-latest
    steps:
      - name: Checkout main repo
        id: checkout-main-repo
        uses: actions/checkout@v3
        with:
          path: main-repo
      - name: Checkout the target 'master' branch of 'flutter-app-secrets'
        id: checkout-secrets
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.FLUTTER_APP_SECRETS_REPO }}
          ref: master
          token: ${{ secrets.ICE_CI_CD_BOT_GH_PAT }}
          path: flutter-app-secrets
          fetch-depth: 0
      - name: Set APP environment
        id: set-env
        run: |
          echo "APP_ENV=staging" >> $GITHUB_ENV
      - name: Configure APP environment (${{ env.APP_ENV }})
        id: setup-env
        run: |
          cd main-repo
          scripts/configure_env.sh $APP_ENV
      - name: Mask APP environment and keys in logs
        id: mask-secrets
        run: |
          cd main-repo
          cat .env | awk '!/^\s*#/' | awk '!/^\s*$/' | while IFS='' read -r line; do
            value=$(echo "$line" | cut -d '=' -f 2-)
            echo "::add-mask::$value"
          done
          for file in ./fastlane/keys/*.json
          do
            node -pe 'Object.entries(JSON.parse(process.argv[1])).forEach(([_, val])=>(typeof val === "string" && val.split("\n").forEach((row) => row && console.log("::add-mask::"+row))))' "$(cat $file)"
          done
      - name: Set Flutter
        id: set-flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version-file: main-repo/pubspec.yaml
          cache: true
      - run: flutter --version
      - name: Bootstrap
        id: bootstrap
        run: |
          cd main-repo
          ./scripts/bootstrap.sh
      - name: Install dependencies
        id: install-dependencies
        run: |
          cd main-repo
          melos run pub_get
      - name: Generate code
        id: generate-code
        run: |
          cd main-repo
          ./scripts/generate_locales.sh
          ./scripts/generate_code.sh
      - name: Analyze code
        id: analyze-code
        run: |
          cd main-repo
          melos run analyze
      - name: Check license
        id: check-license
        run: |
          cd main-repo
          ./scripts/license_check.sh
      - name: Run tests
        id: run-tests
        run: |
          cd main-repo
          melos run test
