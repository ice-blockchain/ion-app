// SPDX-License-Identifier: ice License 1.0

// // dart format width=80
// import 'package:drift/internal/versioned_schema.dart' as i0;
// import 'package:drift/drift.dart' as i1;
// import 'package:drift/drift.dart'; // ignore_for_file: type=lint,unused_import

// // GENERATED BY drift_dev, DO NOT MODIFY.
// final class Schema2 extends i0.VersionedSchema {
//   Schema2({required super.database}) : super(version: 2);
//   @override
//   late final List<i1.DatabaseSchemaEntity> entities = [
//     eventMessagesTable,
//     conversationMessagesTable,
//     conversationReactionsTable,
//     conversationTable,
//     communityMessageTable,
//   ];
//   late final Shape0 eventMessagesTable = Shape0(
//       source: i0.VersionedTable(
//         entityName: 'event_messages_table',
//         withoutRowId: false,
//         isStrict: false,
//         tableConstraints: [
//           'PRIMARY KEY(id)',
//         ],
//         columns: [
//           _column_0,
//           _column_1,
//           _column_2,
//           _column_3,
//           _column_4,
//           _column_5,
//           _column_6,
//         ],
//         attachedDatabase: database,
//       ),
//       alias: null);
//   late final Shape1 conversationMessagesTable = Shape1(
//       source: i0.VersionedTable(
//         entityName: 'conversation_messages_table',
//         withoutRowId: false,
//         isStrict: false,
//         tableConstraints: [
//           'PRIMARY KEY(event_message_id)',
//         ],
//         columns: [
//           _column_7,
//           _column_8,
//           _column_9,
//           _column_6,
//           _column_10,
//           _column_11,
//           _column_12,
//           _column_13,
//         ],
//         attachedDatabase: database,
//       ),
//       alias: null);
//   late final Shape2 conversationReactionsTable = Shape2(
//       source: i0.VersionedTable(
//         entityName: 'conversation_reactions_table',
//         withoutRowId: false,
//         isStrict: false,
//         tableConstraints: [
//           'PRIMARY KEY(reaction_event_id)',
//         ],
//         columns: [
//           _column_5,
//           _column_14,
//           _column_15,
//           _column_6,
//         ],
//         attachedDatabase: database,
//       ),
//       alias: null);
//   late final Shape0 conversationTable = Shape0(
//       source: i0.VersionedTable(
//         entityName: 'conversation_table',
//         withoutRowId: false,
//         isStrict: false,
//         tableConstraints: [
//           'PRIMARY KEY(id)',
//         ],
//         columns: [
//           _column_0,
//           _column_1,
//           _column_2,
//           _column_3,
//           _column_4,
//           _column_5,
//           _column_6,
//         ],
//         attachedDatabase: database,
//       ),
//       alias: null);
//   late final Shape3 communityMessageTable = Shape3(
//       source: i0.VersionedTable(
//         entityName: 'community_message_table',
//         withoutRowId: false,
//         isStrict: false,
//         tableConstraints: [
//           'PRIMARY KEY(id)',
//         ],
//         columns: [
//           _column_0,
//           _column_1,
//           _column_2,
//           _column_3,
//           _column_4,
//           _column_5,
//           _column_6,
//           _column_16,
//         ],
//         attachedDatabase: database,
//       ),
//       alias: null);
// }

// class Shape0 extends i0.VersionedTable {
//   Shape0({required super.source, required super.alias}) : super.aliased();
//   i1.GeneratedColumn<String> get id =>
//       columnsByName['id']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get sig =>
//       columnsByName['sig']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get tags =>
//       columnsByName['tags']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get pubkey =>
//       columnsByName['pubkey']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<int> get kind =>
//       columnsByName['kind']! as i1.GeneratedColumn<int>;
//   i1.GeneratedColumn<String> get content =>
//       columnsByName['content']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<DateTime> get createdAt =>
//       columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
// }

// i1.GeneratedColumn<String> _column_0(String aliasedName) =>
//     i1.GeneratedColumn<String>('id', aliasedName, false,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<String> _column_1(String aliasedName) =>
//     i1.GeneratedColumn<String>('sig', aliasedName, true,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<String> _column_2(String aliasedName) =>
//     i1.GeneratedColumn<String>('tags', aliasedName, false,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<String> _column_3(String aliasedName) =>
//     i1.GeneratedColumn<String>('pubkey', aliasedName, false,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<int> _column_4(String aliasedName) =>
//     i1.GeneratedColumn<int>('kind', aliasedName, false,
//         type: i1.DriftSqlType.int);
// i1.GeneratedColumn<String> _column_5(String aliasedName) =>
//     i1.GeneratedColumn<String>('content', aliasedName, false,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<DateTime> _column_6(String aliasedName) =>
//     i1.GeneratedColumn<DateTime>('created_at', aliasedName, false,
//         type: i1.DriftSqlType.dateTime);

// class Shape1 extends i0.VersionedTable {
//   Shape1({required super.source, required super.alias}) : super.aliased();
//   i1.GeneratedColumn<String> get pubKeys =>
//       columnsByName['pub_keys']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get conversationId =>
//       columnsByName['conversation_id']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get eventMessageId =>
//       columnsByName['event_message_id']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<DateTime> get createdAt =>
//       columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
//   i1.GeneratedColumn<String> get subject =>
//       columnsByName['subject']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<int> get status =>
//       columnsByName['status']! as i1.GeneratedColumn<int>;
//   i1.GeneratedColumn<String> get groupImagePath =>
//       columnsByName['group_image_path']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<bool> get isDeleted =>
//       columnsByName['is_deleted']! as i1.GeneratedColumn<bool>;
// }

// i1.GeneratedColumn<String> _column_7(String aliasedName) =>
//     i1.GeneratedColumn<String>('pub_keys', aliasedName, false,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<String> _column_8(String aliasedName) =>
//     i1.GeneratedColumn<String>('conversation_id', aliasedName, false,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<String> _column_9(String aliasedName) =>
//     i1.GeneratedColumn<String>('event_message_id', aliasedName, false,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<String> _column_10(String aliasedName) =>
//     i1.GeneratedColumn<String>('subject', aliasedName, true,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<int> _column_11(String aliasedName) =>
//     i1.GeneratedColumn<int>('status', aliasedName, false,
//         type: i1.DriftSqlType.int);
// i1.GeneratedColumn<String> _column_12(String aliasedName) =>
//     i1.GeneratedColumn<String>('group_image_path', aliasedName, true,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<bool> _column_13(String aliasedName) =>
//     i1.GeneratedColumn<bool>('is_deleted', aliasedName, false,
//         type: i1.DriftSqlType.bool,
//         defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
//             'CHECK ("is_deleted" IN (0, 1))'),
//         defaultValue: const Constant(false));

// class Shape2 extends i0.VersionedTable {
//   Shape2({required super.source, required super.alias}) : super.aliased();
//   i1.GeneratedColumn<String> get content =>
//       columnsByName['content']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get messageId =>
//       columnsByName['message_id']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get reactionEventId =>
//       columnsByName['reaction_event_id']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<DateTime> get createdAt =>
//       columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
// }

// i1.GeneratedColumn<String> _column_14(String aliasedName) =>
//     i1.GeneratedColumn<String>('message_id', aliasedName, false,
//         type: i1.DriftSqlType.string);
// i1.GeneratedColumn<String> _column_15(String aliasedName) =>
//     i1.GeneratedColumn<String>('reaction_event_id', aliasedName, false,
//         type: i1.DriftSqlType.string);

// class Shape3 extends i0.VersionedTable {
//   Shape3({required super.source, required super.alias}) : super.aliased();
//   i1.GeneratedColumn<String> get id =>
//       columnsByName['id']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get sig =>
//       columnsByName['sig']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get tags =>
//       columnsByName['tags']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<String> get pubkey =>
//       columnsByName['pubkey']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<int> get kind =>
//       columnsByName['kind']! as i1.GeneratedColumn<int>;
//   i1.GeneratedColumn<String> get content =>
//       columnsByName['content']! as i1.GeneratedColumn<String>;
//   i1.GeneratedColumn<DateTime> get createdAt =>
//       columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
//   i1.GeneratedColumn<String> get conversationId =>
//       columnsByName['conversation_id']! as i1.GeneratedColumn<String>;
// }

// i1.GeneratedColumn<String> _column_16(String aliasedName) =>
//     i1.GeneratedColumn<String>('conversation_id', aliasedName, false,
//         type: i1.DriftSqlType.string,
//         defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
//             'REFERENCES conversation_table (id) ON DELETE CASCADE'));
// i0.MigrationStepWithVersion migrationSteps({
//   required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
// }) {
//   return (currentVersion, database) async {
//     switch (currentVersion) {
//       case 1:
//         final schema = Schema2(database: database);
//         final migrator = i1.Migrator(database, schema);
//         await from1To2(migrator, schema);
//         return 2;
//       default:
//         throw ArgumentError.value('Unknown migration from $currentVersion');
//     }
//   };
// }

// i1.OnUpgrade stepByStep({
//   required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
// }) =>
//     i0.VersionedSchema.stepByStepHelper(
//         step: migrationSteps(
//       from1To2: from1To2,
//     ));
